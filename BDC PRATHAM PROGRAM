report ZBDC_TEST_SCOE
       no standard page heading line-size 255.

* Include bdcrecx1_s:
* The call transaction using is called WITH AUTHORITY-CHECK!
* If you have own auth.-checks you can use include bdcrecx1 instead.
*include bdcrecx1_s.
TYPES: BEGIN OF STR_MARA,      " STRUCTURE CREATED THROU YOUR RECORDING SEQUEANCE
      MATNR TYPE MARA-MATNR,
      MBRSH TYPE MARA-MBRSH,
      MTART TYPE MARA-MTART,
      MAKTX TYPE MAKT-MAKTX,
      MEINS TYPE MARA-MEINS,
      MATKL TYPE MARA-MATKL,
      BRGEW TYPE STRING,
      NTGEW TYPE STRING,
      GEWEI TYPE MARA-GEWEI,
  END OF STR_MARA.

DATA: IT_MARA TYPE TABLE OF STR_MARA,
      WA_MARA TYPE STR_MARA,
      RAW_DATA TYPE TRUXS_T_TEXT_DATA.

DATA:   BDCDATA LIKE BDCDATA    OCCURS 0 WITH HEADER LINE.
*       messages of call transaction
DATA:   MESSTAB LIKE BDCMSGCOLL OCCURS 0 WITH HEADER LINE.
    DATA : WA_MSG TYPE  BDCMSGCOLL  .

PARAMETERS: P_FILE TYPE RLGRAP-FILENAME.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.

CALL FUNCTION 'F4_FILENAME'
 EXPORTING
    PROGRAM_NAME        = SYST-CPROG
*   DYNPRO_NUMBER       = SYST-DYNNR
*   FIELD_NAME          = ' '
 IMPORTING
   FILE_NAME           = P_FILE
          .

CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
  EXPORTING
*   I_FIELD_SEPERATOR          =
    I_LINE_HEADER              = 'X'
    I_TAB_RAW_DATA             = RAW_DATA
    I_FILENAME                 = P_FILE
  TABLES
    I_TAB_CONVERTED_DATA       = IT_MARA
* EXCEPTIONS
*   CONVERSION_FAILED          = 1
*   OTHERS                     = 2
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.



start-of-selection.

*perform open_group.
LOOP AT IT_MARA INTO WA_MARA.

perform bdc_dynpro      using 'SAPLMGMM' '0060'.
perform bdc_field       using 'BDC_OKCODE'
                              '=AUSW'.
perform bdc_field       using 'RMMG1-MATNR'
                              WA_MARA-MATNR."'BOTTAL_50012'.
perform bdc_field       using 'RMMG1-MBRSH'
                              WA_MARA-MBRSH."'B'.
perform bdc_field       using 'RMMG1-MTART'
                              WA_MARA-MTART."'RA16'.
perform bdc_dynpro      using 'SAPLMGMM' '0070'.
perform bdc_field       using 'BDC_CURSOR'
                              'MSICHTAUSW-DYTXT(02)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=ENTR'.
perform bdc_field       using 'MSICHTAUSW-KZSEL(01)'
                              'X'.
perform bdc_field       using 'MSICHTAUSW-KZSEL(02)'
                              'X'.
perform bdc_dynpro      using 'SAPLMGMM' '4004'.
perform bdc_field       using 'BDC_OKCODE'
                              '/00'.
perform bdc_field       using 'MAKT-MAKTX'
                              WA_MARA-MAKTX."'for testing purpose bdc 121'.
perform bdc_field       using 'MARA-MEINS'
                              WA_MARA-MEINS."'kg'.
perform bdc_field       using 'MARA-MATKL'
                              WA_MARA-MATKL."'001'.
perform bdc_field       using 'MARA-MTPOS_MARA'
                              'NORM'.
perform bdc_field       using 'BDC_CURSOR'
                              'MARA-NTGEW'.
perform bdc_field       using 'MARA-BRGEW'
                              WA_MARA-BRGEW."'9'.
perform bdc_field       using 'MARA-GEWEI'
                              WA_MARA-GEWEI."'kg'.
perform bdc_field       using 'MARA-NTGEW'
                              WA_MARA-NTGEW."'8'.
perform bdc_dynpro      using 'SAPLMGMM' '4004'.
perform bdc_field       using 'BDC_OKCODE'
                              '/00'.
perform bdc_field       using 'BDC_CURSOR'
                              'MAKT-MAKTX'.
perform bdc_field       using 'MAKT-MAKTX'
                              'for testing purpose bdc 121'.
perform bdc_dynpro      using 'SAPLSPO1' '0300'.
perform bdc_field       using 'BDC_OKCODE'
                              '=YES'.

CALL TRANSACTION 'MM01' USING BDCDATA MESSAGES INTO MESSTAB
      MODE 'N'  " N = NO SCREEN MODE
*           A   =  ALL SCREEN MODE
*            'E'  = ERROR SCREEN MODE  .
      UPDATE 'A'.

DATA: LV_STR TYPE STRING.

*LOOP AT MESSTAB INTO DATA(WA_MSG).
LOOP AT MESSTAB INTO  WA_MSG .

CALL FUNCTION 'FORMAT_MESSAGE'
 EXPORTING
   ID              = SY-MSGID
   LANG            = SY-LANGU
   NO              = SY-MSGNO
   V1              = SY-MSGV1
   V2              = SY-MSGV2
   V3              = SY-MSGV3
   V4              = SY-MSGV4
 IMPORTING
   MSG             = LV_STR
* EXCEPTIONS
*   NOT_FOUND       = 1
*   OTHERS          = 2
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

WRITE:/ LV_STR.
CLEAR: WA_MSG, LV_STR.

ENDLOOP.

CLEAR: WA_MARA.
REFRESH: BDCDATA.

ENDLOOP.

*perform bdc_transaction using 'MM01'.

*perform close_group.

FORM BDC_DYNPRO USING PROGRAM DYNPRO.
  CLEAR BDCDATA.
  BDCDATA-PROGRAM  = PROGRAM.
  BDCDATA-DYNPRO   = DYNPRO.
  BDCDATA-DYNBEGIN = 'X'.
  APPEND BDCDATA.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.

    CLEAR BDCDATA.
    BDCDATA-FNAM = FNAM.
    BDCDATA-FVAL = FVAL.
    APPEND BDCDATA.

ENDFORM.
